// Code generated by MockGen. DO NOT EDIT.
// Source: ../gke.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	container "google.golang.org/api/container/v1"
)

// MockGKEClusterService is a mock of GKEClusterService interface.
type MockGKEClusterService struct {
	ctrl     *gomock.Controller
	recorder *MockGKEClusterServiceMockRecorder
}

// MockGKEClusterServiceMockRecorder is the mock recorder for MockGKEClusterService.
type MockGKEClusterServiceMockRecorder struct {
	mock *MockGKEClusterService
}

// NewMockGKEClusterService creates a new mock instance.
func NewMockGKEClusterService(ctrl *gomock.Controller) *MockGKEClusterService {
	mock := &MockGKEClusterService{ctrl: ctrl}
	mock.recorder = &MockGKEClusterServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGKEClusterService) EXPECT() *MockGKEClusterServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockGKEClusterService) Create(parent string, cluster *container.CreateClusterRequest) (*container.ProjectsLocationsClustersCreateCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", parent, cluster)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersCreateCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockGKEClusterServiceMockRecorder) Create(parent, cluster interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockGKEClusterService)(nil).Create), parent, cluster)
}

// Delete mocks base method.
func (m *MockGKEClusterService) Delete(name string) (*container.ProjectsLocationsClustersDeleteCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", name)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersDeleteCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockGKEClusterServiceMockRecorder) Delete(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockGKEClusterService)(nil).Delete), name)
}

// Get mocks base method.
func (m *MockGKEClusterService) Get(name string) (*container.ProjectsLocationsClustersGetCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersGetCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGKEClusterServiceMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGKEClusterService)(nil).Get), name)
}

// List mocks base method.
func (m *MockGKEClusterService) List(parent string) (*container.ProjectsLocationsClustersListCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", parent)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersListCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockGKEClusterServiceMockRecorder) List(parent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockGKEClusterService)(nil).List), parent)
}

// SetMaintenancePolicy mocks base method.
func (m *MockGKEClusterService) SetMaintenancePolicy(name string, maintenancePolicy *container.SetMaintenancePolicyRequest) (*container.ProjectsLocationsClustersSetMaintenancePolicyCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMaintenancePolicy", name, maintenancePolicy)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersSetMaintenancePolicyCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetMaintenancePolicy indicates an expected call of SetMaintenancePolicy.
func (mr *MockGKEClusterServiceMockRecorder) SetMaintenancePolicy(name, maintenancePolicy interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMaintenancePolicy", reflect.TypeOf((*MockGKEClusterService)(nil).SetMaintenancePolicy), name, maintenancePolicy)
}

// SetNetworkPolicy mocks base method.
func (m *MockGKEClusterService) SetNetworkPolicy(name string, networkPolicy *container.SetNetworkPolicyRequest) (*container.ProjectsLocationsClustersSetNetworkPolicyCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetNetworkPolicy", name, networkPolicy)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersSetNetworkPolicyCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetNetworkPolicy indicates an expected call of SetNetworkPolicy.
func (mr *MockGKEClusterServiceMockRecorder) SetNetworkPolicy(name, networkPolicy interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetNetworkPolicy", reflect.TypeOf((*MockGKEClusterService)(nil).SetNetworkPolicy), name, networkPolicy)
}

// SetResourceLabels mocks base method.
func (m *MockGKEClusterService) SetResourceLabels(name string, resourceLabels *container.SetLabelsRequest) (*container.ProjectsLocationsClustersSetResourceLabelsCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetResourceLabels", name, resourceLabels)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersSetResourceLabelsCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetResourceLabels indicates an expected call of SetResourceLabels.
func (mr *MockGKEClusterServiceMockRecorder) SetResourceLabels(name, resourceLabels interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetResourceLabels", reflect.TypeOf((*MockGKEClusterService)(nil).SetResourceLabels), name, resourceLabels)
}

// MockGKENodePoolService is a mock of GKENodePoolService interface.
type MockGKENodePoolService struct {
	ctrl     *gomock.Controller
	recorder *MockGKENodePoolServiceMockRecorder
}

// MockGKENodePoolServiceMockRecorder is the mock recorder for MockGKENodePoolService.
type MockGKENodePoolServiceMockRecorder struct {
	mock *MockGKENodePoolService
}

// NewMockGKENodePoolService creates a new mock instance.
func NewMockGKENodePoolService(ctrl *gomock.Controller) *MockGKENodePoolService {
	mock := &MockGKENodePoolService{ctrl: ctrl}
	mock.recorder = &MockGKENodePoolServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGKENodePoolService) EXPECT() *MockGKENodePoolServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockGKENodePoolService) Create(parent string, cluster *container.CreateNodePoolRequest) (*container.ProjectsLocationsClustersNodePoolsCreateCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", parent, cluster)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsCreateCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockGKENodePoolServiceMockRecorder) Create(parent, cluster interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockGKENodePoolService)(nil).Create), parent, cluster)
}

// Delete mocks base method.
func (m *MockGKENodePoolService) Delete(name string) (*container.ProjectsLocationsClustersNodePoolsDeleteCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", name)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsDeleteCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockGKENodePoolServiceMockRecorder) Delete(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockGKENodePoolService)(nil).Delete), name)
}

// Get mocks base method.
func (m *MockGKENodePoolService) Get(name string) (*container.ProjectsLocationsClustersNodePoolsGetCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsGetCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGKENodePoolServiceMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGKENodePoolService)(nil).Get), name)
}

// List mocks base method.
func (m *MockGKENodePoolService) List(parent string) (*container.ProjectsLocationsClustersNodePoolsListCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", parent)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsListCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockGKENodePoolServiceMockRecorder) List(parent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockGKENodePoolService)(nil).List), parent)
}

// SetAutoscaling mocks base method.
func (m *MockGKENodePoolService) SetAutoscaling(name string, autoscaling *container.SetNodePoolAutoscalingRequest) (*container.ProjectsLocationsClustersNodePoolsSetAutoscalingCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetAutoscaling", name, autoscaling)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsSetAutoscalingCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetAutoscaling indicates an expected call of SetAutoscaling.
func (mr *MockGKENodePoolServiceMockRecorder) SetAutoscaling(name, autoscaling interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAutoscaling", reflect.TypeOf((*MockGKENodePoolService)(nil).SetAutoscaling), name, autoscaling)
}

// SetManagement mocks base method.
func (m *MockGKENodePoolService) SetManagement(name string, management *container.SetNodePoolManagementRequest) (*container.ProjectsLocationsClustersNodePoolsSetManagementCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetManagement", name, management)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsSetManagementCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetManagement indicates an expected call of SetManagement.
func (mr *MockGKENodePoolServiceMockRecorder) SetManagement(name, management interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetManagement", reflect.TypeOf((*MockGKENodePoolService)(nil).SetManagement), name, management)
}

// SetSize mocks base method.
func (m *MockGKENodePoolService) SetSize(name string, size *container.SetNodePoolSizeRequest) (*container.ProjectsLocationsClustersNodePoolsSetSizeCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSize", name, size)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsSetSizeCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetSize indicates an expected call of SetSize.
func (mr *MockGKENodePoolServiceMockRecorder) SetSize(name, size interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSize", reflect.TypeOf((*MockGKENodePoolService)(nil).SetSize), name, size)
}

// Update mocks base method.
func (m *MockGKENodePoolService) Update(name string, nodepool *container.UpdateNodePoolRequest) (*container.ProjectsLocationsClustersNodePoolsUpdateCall, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", name, nodepool)
	ret0, _ := ret[0].(*container.ProjectsLocationsClustersNodePoolsUpdateCall)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockGKENodePoolServiceMockRecorder) Update(name, nodepool interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockGKENodePoolService)(nil).Update), name, nodepool)
}
